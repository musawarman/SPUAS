//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SPUAS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsReport")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsReport : global::System.Data.DataSet {
        
        private dataBukuDataTable tabledataBuku;
        
        private dataPenulisDataTable tabledataPenulis;
        
        private dataFakultasDataTable tabledataFakultas;
        
        private dataPenelaahDataTable tabledataPenelaah;
        
        private dataPusjianDataTable tabledataPusjian;
        
        private global::System.Data.DataRelation relationdataBuku_dataPenulis;
        
        private global::System.Data.DataRelation relationdataBuku_dataFakultas;
        
        private global::System.Data.DataRelation relationdataBuku_dataPusjian;
        
        private global::System.Data.DataRelation relationdataBuku_dataPenelaah;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsReport() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsReport(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dataBuku"] != null)) {
                    base.Tables.Add(new dataBukuDataTable(ds.Tables["dataBuku"]));
                }
                if ((ds.Tables["dataPenulis"] != null)) {
                    base.Tables.Add(new dataPenulisDataTable(ds.Tables["dataPenulis"]));
                }
                if ((ds.Tables["dataFakultas"] != null)) {
                    base.Tables.Add(new dataFakultasDataTable(ds.Tables["dataFakultas"]));
                }
                if ((ds.Tables["dataPenelaah"] != null)) {
                    base.Tables.Add(new dataPenelaahDataTable(ds.Tables["dataPenelaah"]));
                }
                if ((ds.Tables["dataPusjian"] != null)) {
                    base.Tables.Add(new dataPusjianDataTable(ds.Tables["dataPusjian"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dataBukuDataTable dataBuku {
            get {
                return this.tabledataBuku;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dataPenulisDataTable dataPenulis {
            get {
                return this.tabledataPenulis;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dataFakultasDataTable dataFakultas {
            get {
                return this.tabledataFakultas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dataPenelaahDataTable dataPenelaah {
            get {
                return this.tabledataPenelaah;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dataPusjianDataTable dataPusjian {
            get {
                return this.tabledataPusjian;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsReport cln = ((dsReport)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dataBuku"] != null)) {
                    base.Tables.Add(new dataBukuDataTable(ds.Tables["dataBuku"]));
                }
                if ((ds.Tables["dataPenulis"] != null)) {
                    base.Tables.Add(new dataPenulisDataTable(ds.Tables["dataPenulis"]));
                }
                if ((ds.Tables["dataFakultas"] != null)) {
                    base.Tables.Add(new dataFakultasDataTable(ds.Tables["dataFakultas"]));
                }
                if ((ds.Tables["dataPenelaah"] != null)) {
                    base.Tables.Add(new dataPenelaahDataTable(ds.Tables["dataPenelaah"]));
                }
                if ((ds.Tables["dataPusjian"] != null)) {
                    base.Tables.Add(new dataPusjianDataTable(ds.Tables["dataPusjian"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledataBuku = ((dataBukuDataTable)(base.Tables["dataBuku"]));
            if ((initTable == true)) {
                if ((this.tabledataBuku != null)) {
                    this.tabledataBuku.InitVars();
                }
            }
            this.tabledataPenulis = ((dataPenulisDataTable)(base.Tables["dataPenulis"]));
            if ((initTable == true)) {
                if ((this.tabledataPenulis != null)) {
                    this.tabledataPenulis.InitVars();
                }
            }
            this.tabledataFakultas = ((dataFakultasDataTable)(base.Tables["dataFakultas"]));
            if ((initTable == true)) {
                if ((this.tabledataFakultas != null)) {
                    this.tabledataFakultas.InitVars();
                }
            }
            this.tabledataPenelaah = ((dataPenelaahDataTable)(base.Tables["dataPenelaah"]));
            if ((initTable == true)) {
                if ((this.tabledataPenelaah != null)) {
                    this.tabledataPenelaah.InitVars();
                }
            }
            this.tabledataPusjian = ((dataPusjianDataTable)(base.Tables["dataPusjian"]));
            if ((initTable == true)) {
                if ((this.tabledataPusjian != null)) {
                    this.tabledataPusjian.InitVars();
                }
            }
            this.relationdataBuku_dataPenulis = this.Relations["dataBuku_dataPenulis"];
            this.relationdataBuku_dataFakultas = this.Relations["dataBuku_dataFakultas"];
            this.relationdataBuku_dataPusjian = this.Relations["dataBuku_dataPusjian"];
            this.relationdataBuku_dataPenelaah = this.Relations["dataBuku_dataPenelaah"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsReport";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsReport.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledataBuku = new dataBukuDataTable();
            base.Tables.Add(this.tabledataBuku);
            this.tabledataPenulis = new dataPenulisDataTable();
            base.Tables.Add(this.tabledataPenulis);
            this.tabledataFakultas = new dataFakultasDataTable();
            base.Tables.Add(this.tabledataFakultas);
            this.tabledataPenelaah = new dataPenelaahDataTable();
            base.Tables.Add(this.tabledataPenelaah);
            this.tabledataPusjian = new dataPusjianDataTable();
            base.Tables.Add(this.tabledataPusjian);
            this.relationdataBuku_dataPenulis = new global::System.Data.DataRelation("dataBuku_dataPenulis", new global::System.Data.DataColumn[] {
                        this.tabledataBuku.KodeColumn}, new global::System.Data.DataColumn[] {
                        this.tabledataPenulis.KodeColumn}, false);
            this.Relations.Add(this.relationdataBuku_dataPenulis);
            this.relationdataBuku_dataFakultas = new global::System.Data.DataRelation("dataBuku_dataFakultas", new global::System.Data.DataColumn[] {
                        this.tabledataBuku.KodeColumn}, new global::System.Data.DataColumn[] {
                        this.tabledataFakultas.KodeColumn}, false);
            this.Relations.Add(this.relationdataBuku_dataFakultas);
            this.relationdataBuku_dataPusjian = new global::System.Data.DataRelation("dataBuku_dataPusjian", new global::System.Data.DataColumn[] {
                        this.tabledataBuku.KodeColumn}, new global::System.Data.DataColumn[] {
                        this.tabledataPusjian.KodeColumn}, false);
            this.Relations.Add(this.relationdataBuku_dataPusjian);
            this.relationdataBuku_dataPenelaah = new global::System.Data.DataRelation("dataBuku_dataPenelaah", new global::System.Data.DataColumn[] {
                        this.tabledataBuku.KodeColumn}, new global::System.Data.DataColumn[] {
                        this.tabledataPenelaah.KodeColumn}, false);
            this.Relations.Add(this.relationdataBuku_dataPenelaah);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedataBuku() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedataPenulis() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedataFakultas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedataPenelaah() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedataPusjian() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsReport ds = new dsReport();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dataBukuRowChangeEventHandler(object sender, dataBukuRowChangeEvent e);
        
        public delegate void dataPenulisRowChangeEventHandler(object sender, dataPenulisRowChangeEvent e);
        
        public delegate void dataFakultasRowChangeEventHandler(object sender, dataFakultasRowChangeEvent e);
        
        public delegate void dataPenelaahRowChangeEventHandler(object sender, dataPenelaahRowChangeEvent e);
        
        public delegate void dataPusjianRowChangeEventHandler(object sender, dataPusjianRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dataBukuDataTable : global::System.Data.TypedTableBase<dataBukuRow> {
            
            private global::System.Data.DataColumn columnKode;
            
            private global::System.Data.DataColumn columnNamaBuku;
            
            private global::System.Data.DataColumn columnPenulis;
            
            private global::System.Data.DataColumn columnPenelaah;
            
            private global::System.Data.DataColumn columnTahunKisi;
            
            private global::System.Data.DataColumn columnTarget;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataBukuDataTable() {
                this.TableName = "dataBuku";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dataBukuDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dataBukuDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeColumn {
                get {
                    return this.columnKode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaBukuColumn {
                get {
                    return this.columnNamaBuku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PenulisColumn {
                get {
                    return this.columnPenulis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PenelaahColumn {
                get {
                    return this.columnPenelaah;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TahunKisiColumn {
                get {
                    return this.columnTahunKisi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TargetColumn {
                get {
                    return this.columnTarget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataBukuRow this[int index] {
                get {
                    return ((dataBukuRow)(this.Rows[index]));
                }
            }
            
            public event dataBukuRowChangeEventHandler dataBukuRowChanging;
            
            public event dataBukuRowChangeEventHandler dataBukuRowChanged;
            
            public event dataBukuRowChangeEventHandler dataBukuRowDeleting;
            
            public event dataBukuRowChangeEventHandler dataBukuRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddataBukuRow(dataBukuRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataBukuRow AdddataBukuRow(string Kode, string NamaBuku, string Penulis, string Penelaah, string TahunKisi, string Target) {
                dataBukuRow rowdataBukuRow = ((dataBukuRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Kode,
                        NamaBuku,
                        Penulis,
                        Penelaah,
                        TahunKisi,
                        Target};
                rowdataBukuRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdataBukuRow);
                return rowdataBukuRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dataBukuDataTable cln = ((dataBukuDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dataBukuDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKode = base.Columns["Kode"];
                this.columnNamaBuku = base.Columns["NamaBuku"];
                this.columnPenulis = base.Columns["Penulis"];
                this.columnPenelaah = base.Columns["Penelaah"];
                this.columnTahunKisi = base.Columns["TahunKisi"];
                this.columnTarget = base.Columns["Target"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKode = new global::System.Data.DataColumn("Kode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode);
                this.columnNamaBuku = new global::System.Data.DataColumn("NamaBuku", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaBuku);
                this.columnPenulis = new global::System.Data.DataColumn("Penulis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenulis);
                this.columnPenelaah = new global::System.Data.DataColumn("Penelaah", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPenelaah);
                this.columnTahunKisi = new global::System.Data.DataColumn("TahunKisi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTahunKisi);
                this.columnTarget = new global::System.Data.DataColumn("Target", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTarget);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("dataBukuKey1", new global::System.Data.DataColumn[] {
                                this.columnKode}, false));
                this.columnKode.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataBukuRow NewdataBukuRow() {
                return ((dataBukuRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dataBukuRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dataBukuRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dataBukuRowChanged != null)) {
                    this.dataBukuRowChanged(this, new dataBukuRowChangeEvent(((dataBukuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dataBukuRowChanging != null)) {
                    this.dataBukuRowChanging(this, new dataBukuRowChangeEvent(((dataBukuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dataBukuRowDeleted != null)) {
                    this.dataBukuRowDeleted(this, new dataBukuRowChangeEvent(((dataBukuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dataBukuRowDeleting != null)) {
                    this.dataBukuRowDeleting(this, new dataBukuRowChangeEvent(((dataBukuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedataBukuRow(dataBukuRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReport ds = new dsReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dataBukuDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dataPenulisDataTable : global::System.Data.TypedTableBase<dataPenulisRow> {
            
            private global::System.Data.DataColumn columnKode;
            
            private global::System.Data.DataColumn columnJml;
            
            private global::System.Data.DataColumn columnMdl;
            
            private global::System.Data.DataColumn columnKeterangan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPenulisDataTable() {
                this.TableName = "dataPenulis";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dataPenulisDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dataPenulisDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeColumn {
                get {
                    return this.columnKode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JmlColumn {
                get {
                    return this.columnJml;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MdlColumn {
                get {
                    return this.columnMdl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeteranganColumn {
                get {
                    return this.columnKeterangan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPenulisRow this[int index] {
                get {
                    return ((dataPenulisRow)(this.Rows[index]));
                }
            }
            
            public event dataPenulisRowChangeEventHandler dataPenulisRowChanging;
            
            public event dataPenulisRowChangeEventHandler dataPenulisRowChanged;
            
            public event dataPenulisRowChangeEventHandler dataPenulisRowDeleting;
            
            public event dataPenulisRowChangeEventHandler dataPenulisRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddataPenulisRow(dataPenulisRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPenulisRow AdddataPenulisRow(dataBukuRow parentdataBukuRowBydataBuku_dataPenulis, string Jml, string Mdl, string Keterangan) {
                dataPenulisRow rowdataPenulisRow = ((dataPenulisRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Jml,
                        Mdl,
                        Keterangan};
                if ((parentdataBukuRowBydataBuku_dataPenulis != null)) {
                    columnValuesArray[0] = parentdataBukuRowBydataBuku_dataPenulis[0];
                }
                rowdataPenulisRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdataPenulisRow);
                return rowdataPenulisRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dataPenulisDataTable cln = ((dataPenulisDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dataPenulisDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKode = base.Columns["Kode"];
                this.columnJml = base.Columns["Jml"];
                this.columnMdl = base.Columns["Mdl"];
                this.columnKeterangan = base.Columns["Keterangan"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKode = new global::System.Data.DataColumn("Kode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode);
                this.columnJml = new global::System.Data.DataColumn("Jml", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJml);
                this.columnMdl = new global::System.Data.DataColumn("Mdl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMdl);
                this.columnKeterangan = new global::System.Data.DataColumn("Keterangan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeterangan);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPenulisRow NewdataPenulisRow() {
                return ((dataPenulisRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dataPenulisRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dataPenulisRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dataPenulisRowChanged != null)) {
                    this.dataPenulisRowChanged(this, new dataPenulisRowChangeEvent(((dataPenulisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dataPenulisRowChanging != null)) {
                    this.dataPenulisRowChanging(this, new dataPenulisRowChangeEvent(((dataPenulisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dataPenulisRowDeleted != null)) {
                    this.dataPenulisRowDeleted(this, new dataPenulisRowChangeEvent(((dataPenulisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dataPenulisRowDeleting != null)) {
                    this.dataPenulisRowDeleting(this, new dataPenulisRowChangeEvent(((dataPenulisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedataPenulisRow(dataPenulisRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReport ds = new dsReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dataPenulisDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dataFakultasDataTable : global::System.Data.TypedTableBase<dataFakultasRow> {
            
            private global::System.Data.DataColumn columnKode;
            
            private global::System.Data.DataColumn columnJml;
            
            private global::System.Data.DataColumn columnTglTerima;
            
            private global::System.Data.DataColumn columnStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataFakultasDataTable() {
                this.TableName = "dataFakultas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dataFakultasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dataFakultasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeColumn {
                get {
                    return this.columnKode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JmlColumn {
                get {
                    return this.columnJml;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglTerimaColumn {
                get {
                    return this.columnTglTerima;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataFakultasRow this[int index] {
                get {
                    return ((dataFakultasRow)(this.Rows[index]));
                }
            }
            
            public event dataFakultasRowChangeEventHandler dataFakultasRowChanging;
            
            public event dataFakultasRowChangeEventHandler dataFakultasRowChanged;
            
            public event dataFakultasRowChangeEventHandler dataFakultasRowDeleting;
            
            public event dataFakultasRowChangeEventHandler dataFakultasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddataFakultasRow(dataFakultasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataFakultasRow AdddataFakultasRow(dataBukuRow parentdataBukuRowBydataBuku_dataFakultas, string Jml, string TglTerima, string Status) {
                dataFakultasRow rowdataFakultasRow = ((dataFakultasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Jml,
                        TglTerima,
                        Status};
                if ((parentdataBukuRowBydataBuku_dataFakultas != null)) {
                    columnValuesArray[0] = parentdataBukuRowBydataBuku_dataFakultas[0];
                }
                rowdataFakultasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdataFakultasRow);
                return rowdataFakultasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dataFakultasDataTable cln = ((dataFakultasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dataFakultasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKode = base.Columns["Kode"];
                this.columnJml = base.Columns["Jml"];
                this.columnTglTerima = base.Columns["TglTerima"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKode = new global::System.Data.DataColumn("Kode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode);
                this.columnJml = new global::System.Data.DataColumn("Jml", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJml);
                this.columnTglTerima = new global::System.Data.DataColumn("TglTerima", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglTerima);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataFakultasRow NewdataFakultasRow() {
                return ((dataFakultasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dataFakultasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dataFakultasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dataFakultasRowChanged != null)) {
                    this.dataFakultasRowChanged(this, new dataFakultasRowChangeEvent(((dataFakultasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dataFakultasRowChanging != null)) {
                    this.dataFakultasRowChanging(this, new dataFakultasRowChangeEvent(((dataFakultasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dataFakultasRowDeleted != null)) {
                    this.dataFakultasRowDeleted(this, new dataFakultasRowChangeEvent(((dataFakultasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dataFakultasRowDeleting != null)) {
                    this.dataFakultasRowDeleting(this, new dataFakultasRowChangeEvent(((dataFakultasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedataFakultasRow(dataFakultasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReport ds = new dsReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dataFakultasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dataPenelaahDataTable : global::System.Data.TypedTableBase<dataPenelaahRow> {
            
            private global::System.Data.DataColumn columnKode;
            
            private global::System.Data.DataColumn columnJml;
            
            private global::System.Data.DataColumn columnTglKirim;
            
            private global::System.Data.DataColumn columnStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPenelaahDataTable() {
                this.TableName = "dataPenelaah";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dataPenelaahDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dataPenelaahDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeColumn {
                get {
                    return this.columnKode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JmlColumn {
                get {
                    return this.columnJml;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglKirimColumn {
                get {
                    return this.columnTglKirim;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPenelaahRow this[int index] {
                get {
                    return ((dataPenelaahRow)(this.Rows[index]));
                }
            }
            
            public event dataPenelaahRowChangeEventHandler dataPenelaahRowChanging;
            
            public event dataPenelaahRowChangeEventHandler dataPenelaahRowChanged;
            
            public event dataPenelaahRowChangeEventHandler dataPenelaahRowDeleting;
            
            public event dataPenelaahRowChangeEventHandler dataPenelaahRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddataPenelaahRow(dataPenelaahRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPenelaahRow AdddataPenelaahRow(dataBukuRow parentdataBukuRowBydataBuku_dataPenelaah, string Jml, string TglKirim, string Status) {
                dataPenelaahRow rowdataPenelaahRow = ((dataPenelaahRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Jml,
                        TglKirim,
                        Status};
                if ((parentdataBukuRowBydataBuku_dataPenelaah != null)) {
                    columnValuesArray[0] = parentdataBukuRowBydataBuku_dataPenelaah[0];
                }
                rowdataPenelaahRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdataPenelaahRow);
                return rowdataPenelaahRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dataPenelaahDataTable cln = ((dataPenelaahDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dataPenelaahDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKode = base.Columns["Kode"];
                this.columnJml = base.Columns["Jml"];
                this.columnTglKirim = base.Columns["TglKirim"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKode = new global::System.Data.DataColumn("Kode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode);
                this.columnJml = new global::System.Data.DataColumn("Jml", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJml);
                this.columnTglKirim = new global::System.Data.DataColumn("TglKirim", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglKirim);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnTglKirim.Caption = "TglTerima";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPenelaahRow NewdataPenelaahRow() {
                return ((dataPenelaahRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dataPenelaahRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dataPenelaahRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dataPenelaahRowChanged != null)) {
                    this.dataPenelaahRowChanged(this, new dataPenelaahRowChangeEvent(((dataPenelaahRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dataPenelaahRowChanging != null)) {
                    this.dataPenelaahRowChanging(this, new dataPenelaahRowChangeEvent(((dataPenelaahRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dataPenelaahRowDeleted != null)) {
                    this.dataPenelaahRowDeleted(this, new dataPenelaahRowChangeEvent(((dataPenelaahRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dataPenelaahRowDeleting != null)) {
                    this.dataPenelaahRowDeleting(this, new dataPenelaahRowChangeEvent(((dataPenelaahRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedataPenelaahRow(dataPenelaahRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReport ds = new dsReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dataPenelaahDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dataPusjianDataTable : global::System.Data.TypedTableBase<dataPusjianRow> {
            
            private global::System.Data.DataColumn columnKode;
            
            private global::System.Data.DataColumn columnJml;
            
            private global::System.Data.DataColumn columnTglKirim;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPusjianDataTable() {
                this.TableName = "dataPusjian";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dataPusjianDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dataPusjianDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeColumn {
                get {
                    return this.columnKode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JmlColumn {
                get {
                    return this.columnJml;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglKirimColumn {
                get {
                    return this.columnTglKirim;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPusjianRow this[int index] {
                get {
                    return ((dataPusjianRow)(this.Rows[index]));
                }
            }
            
            public event dataPusjianRowChangeEventHandler dataPusjianRowChanging;
            
            public event dataPusjianRowChangeEventHandler dataPusjianRowChanged;
            
            public event dataPusjianRowChangeEventHandler dataPusjianRowDeleting;
            
            public event dataPusjianRowChangeEventHandler dataPusjianRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddataPusjianRow(dataPusjianRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPusjianRow AdddataPusjianRow(dataBukuRow parentdataBukuRowBydataBuku_dataPusjian, string Jml, string TglKirim) {
                dataPusjianRow rowdataPusjianRow = ((dataPusjianRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Jml,
                        TglKirim};
                if ((parentdataBukuRowBydataBuku_dataPusjian != null)) {
                    columnValuesArray[0] = parentdataBukuRowBydataBuku_dataPusjian[0];
                }
                rowdataPusjianRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdataPusjianRow);
                return rowdataPusjianRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dataPusjianDataTable cln = ((dataPusjianDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dataPusjianDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKode = base.Columns["Kode"];
                this.columnJml = base.Columns["Jml"];
                this.columnTglKirim = base.Columns["TglKirim"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKode = new global::System.Data.DataColumn("Kode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKode);
                this.columnJml = new global::System.Data.DataColumn("Jml", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJml);
                this.columnTglKirim = new global::System.Data.DataColumn("TglKirim", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglKirim);
                this.columnTglKirim.Caption = "TglTerima";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPusjianRow NewdataPusjianRow() {
                return ((dataPusjianRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dataPusjianRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dataPusjianRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dataPusjianRowChanged != null)) {
                    this.dataPusjianRowChanged(this, new dataPusjianRowChangeEvent(((dataPusjianRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dataPusjianRowChanging != null)) {
                    this.dataPusjianRowChanging(this, new dataPusjianRowChangeEvent(((dataPusjianRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dataPusjianRowDeleted != null)) {
                    this.dataPusjianRowDeleted(this, new dataPusjianRowChangeEvent(((dataPusjianRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dataPusjianRowDeleting != null)) {
                    this.dataPusjianRowDeleting(this, new dataPusjianRowChangeEvent(((dataPusjianRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedataPusjianRow(dataPusjianRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReport ds = new dsReport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dataPusjianDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dataBukuRow : global::System.Data.DataRow {
            
            private dataBukuDataTable tabledataBuku;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dataBukuRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledataBuku = ((dataBukuDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kode {
                get {
                    try {
                        return ((string)(this[this.tabledataBuku.KodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode\' in table \'dataBuku\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataBuku.KodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaBuku {
                get {
                    try {
                        return ((string)(this[this.tabledataBuku.NamaBukuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaBuku\' in table \'dataBuku\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataBuku.NamaBukuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Penulis {
                get {
                    try {
                        return ((string)(this[this.tabledataBuku.PenulisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Penulis\' in table \'dataBuku\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataBuku.PenulisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Penelaah {
                get {
                    try {
                        return ((string)(this[this.tabledataBuku.PenelaahColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Penelaah\' in table \'dataBuku\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataBuku.PenelaahColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TahunKisi {
                get {
                    try {
                        return ((string)(this[this.tabledataBuku.TahunKisiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TahunKisi\' in table \'dataBuku\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataBuku.TahunKisiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Target {
                get {
                    try {
                        return ((string)(this[this.tabledataBuku.TargetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Target\' in table \'dataBuku\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataBuku.TargetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeNull() {
                return this.IsNull(this.tabledataBuku.KodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeNull() {
                this[this.tabledataBuku.KodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaBukuNull() {
                return this.IsNull(this.tabledataBuku.NamaBukuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaBukuNull() {
                this[this.tabledataBuku.NamaBukuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPenulisNull() {
                return this.IsNull(this.tabledataBuku.PenulisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPenulisNull() {
                this[this.tabledataBuku.PenulisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPenelaahNull() {
                return this.IsNull(this.tabledataBuku.PenelaahColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPenelaahNull() {
                this[this.tabledataBuku.PenelaahColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTahunKisiNull() {
                return this.IsNull(this.tabledataBuku.TahunKisiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTahunKisiNull() {
                this[this.tabledataBuku.TahunKisiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTargetNull() {
                return this.IsNull(this.tabledataBuku.TargetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTargetNull() {
                this[this.tabledataBuku.TargetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPenulisRow[] GetdataPenulisRows() {
                if ((this.Table.ChildRelations["dataBuku_dataPenulis"] == null)) {
                    return new dataPenulisRow[0];
                }
                else {
                    return ((dataPenulisRow[])(base.GetChildRows(this.Table.ChildRelations["dataBuku_dataPenulis"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataFakultasRow[] GetdataFakultasRows() {
                if ((this.Table.ChildRelations["dataBuku_dataFakultas"] == null)) {
                    return new dataFakultasRow[0];
                }
                else {
                    return ((dataFakultasRow[])(base.GetChildRows(this.Table.ChildRelations["dataBuku_dataFakultas"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPusjianRow[] GetdataPusjianRows() {
                if ((this.Table.ChildRelations["dataBuku_dataPusjian"] == null)) {
                    return new dataPusjianRow[0];
                }
                else {
                    return ((dataPusjianRow[])(base.GetChildRows(this.Table.ChildRelations["dataBuku_dataPusjian"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPenelaahRow[] GetdataPenelaahRows() {
                if ((this.Table.ChildRelations["dataBuku_dataPenelaah"] == null)) {
                    return new dataPenelaahRow[0];
                }
                else {
                    return ((dataPenelaahRow[])(base.GetChildRows(this.Table.ChildRelations["dataBuku_dataPenelaah"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dataPenulisRow : global::System.Data.DataRow {
            
            private dataPenulisDataTable tabledataPenulis;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dataPenulisRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledataPenulis = ((dataPenulisDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kode {
                get {
                    try {
                        return ((string)(this[this.tabledataPenulis.KodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode\' in table \'dataPenulis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataPenulis.KodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Jml {
                get {
                    try {
                        return ((string)(this[this.tabledataPenulis.JmlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jml\' in table \'dataPenulis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataPenulis.JmlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mdl {
                get {
                    try {
                        return ((string)(this[this.tabledataPenulis.MdlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mdl\' in table \'dataPenulis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataPenulis.MdlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Keterangan {
                get {
                    try {
                        return ((string)(this[this.tabledataPenulis.KeteranganColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Keterangan\' in table \'dataPenulis\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataPenulis.KeteranganColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataBukuRow dataBukuRow {
                get {
                    return ((dataBukuRow)(this.GetParentRow(this.Table.ParentRelations["dataBuku_dataPenulis"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["dataBuku_dataPenulis"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeNull() {
                return this.IsNull(this.tabledataPenulis.KodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeNull() {
                this[this.tabledataPenulis.KodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJmlNull() {
                return this.IsNull(this.tabledataPenulis.JmlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJmlNull() {
                this[this.tabledataPenulis.JmlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMdlNull() {
                return this.IsNull(this.tabledataPenulis.MdlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMdlNull() {
                this[this.tabledataPenulis.MdlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKeteranganNull() {
                return this.IsNull(this.tabledataPenulis.KeteranganColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKeteranganNull() {
                this[this.tabledataPenulis.KeteranganColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dataFakultasRow : global::System.Data.DataRow {
            
            private dataFakultasDataTable tabledataFakultas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dataFakultasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledataFakultas = ((dataFakultasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kode {
                get {
                    try {
                        return ((string)(this[this.tabledataFakultas.KodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode\' in table \'dataFakultas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataFakultas.KodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Jml {
                get {
                    try {
                        return ((string)(this[this.tabledataFakultas.JmlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jml\' in table \'dataFakultas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataFakultas.JmlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglTerima {
                get {
                    try {
                        return ((string)(this[this.tabledataFakultas.TglTerimaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglTerima\' in table \'dataFakultas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataFakultas.TglTerimaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tabledataFakultas.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'dataFakultas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataFakultas.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataBukuRow dataBukuRow {
                get {
                    return ((dataBukuRow)(this.GetParentRow(this.Table.ParentRelations["dataBuku_dataFakultas"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["dataBuku_dataFakultas"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeNull() {
                return this.IsNull(this.tabledataFakultas.KodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeNull() {
                this[this.tabledataFakultas.KodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJmlNull() {
                return this.IsNull(this.tabledataFakultas.JmlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJmlNull() {
                this[this.tabledataFakultas.JmlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglTerimaNull() {
                return this.IsNull(this.tabledataFakultas.TglTerimaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglTerimaNull() {
                this[this.tabledataFakultas.TglTerimaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tabledataFakultas.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tabledataFakultas.StatusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dataPenelaahRow : global::System.Data.DataRow {
            
            private dataPenelaahDataTable tabledataPenelaah;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dataPenelaahRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledataPenelaah = ((dataPenelaahDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kode {
                get {
                    try {
                        return ((string)(this[this.tabledataPenelaah.KodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode\' in table \'dataPenelaah\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataPenelaah.KodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Jml {
                get {
                    try {
                        return ((string)(this[this.tabledataPenelaah.JmlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jml\' in table \'dataPenelaah\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataPenelaah.JmlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglKirim {
                get {
                    try {
                        return ((string)(this[this.tabledataPenelaah.TglKirimColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglKirim\' in table \'dataPenelaah\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataPenelaah.TglKirimColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tabledataPenelaah.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'dataPenelaah\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataPenelaah.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataBukuRow dataBukuRow {
                get {
                    return ((dataBukuRow)(this.GetParentRow(this.Table.ParentRelations["dataBuku_dataPenelaah"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["dataBuku_dataPenelaah"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeNull() {
                return this.IsNull(this.tabledataPenelaah.KodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeNull() {
                this[this.tabledataPenelaah.KodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJmlNull() {
                return this.IsNull(this.tabledataPenelaah.JmlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJmlNull() {
                this[this.tabledataPenelaah.JmlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglKirimNull() {
                return this.IsNull(this.tabledataPenelaah.TglKirimColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglKirimNull() {
                this[this.tabledataPenelaah.TglKirimColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tabledataPenelaah.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tabledataPenelaah.StatusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dataPusjianRow : global::System.Data.DataRow {
            
            private dataPusjianDataTable tabledataPusjian;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dataPusjianRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledataPusjian = ((dataPusjianDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kode {
                get {
                    try {
                        return ((string)(this[this.tabledataPusjian.KodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kode\' in table \'dataPusjian\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataPusjian.KodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Jml {
                get {
                    try {
                        return ((string)(this[this.tabledataPusjian.JmlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jml\' in table \'dataPusjian\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataPusjian.JmlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TglKirim {
                get {
                    try {
                        return ((string)(this[this.tabledataPusjian.TglKirimColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglKirim\' in table \'dataPusjian\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledataPusjian.TglKirimColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataBukuRow dataBukuRow {
                get {
                    return ((dataBukuRow)(this.GetParentRow(this.Table.ParentRelations["dataBuku_dataPusjian"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["dataBuku_dataPusjian"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeNull() {
                return this.IsNull(this.tabledataPusjian.KodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeNull() {
                this[this.tabledataPusjian.KodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJmlNull() {
                return this.IsNull(this.tabledataPusjian.JmlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJmlNull() {
                this[this.tabledataPusjian.JmlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglKirimNull() {
                return this.IsNull(this.tabledataPusjian.TglKirimColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglKirimNull() {
                this[this.tabledataPusjian.TglKirimColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dataBukuRowChangeEvent : global::System.EventArgs {
            
            private dataBukuRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataBukuRowChangeEvent(dataBukuRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataBukuRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dataPenulisRowChangeEvent : global::System.EventArgs {
            
            private dataPenulisRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPenulisRowChangeEvent(dataPenulisRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPenulisRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dataFakultasRowChangeEvent : global::System.EventArgs {
            
            private dataFakultasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataFakultasRowChangeEvent(dataFakultasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataFakultasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dataPenelaahRowChangeEvent : global::System.EventArgs {
            
            private dataPenelaahRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPenelaahRowChangeEvent(dataPenelaahRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPenelaahRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dataPusjianRowChangeEvent : global::System.EventArgs {
            
            private dataPusjianRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPusjianRowChangeEvent(dataPusjianRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dataPusjianRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591